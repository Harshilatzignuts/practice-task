{"ast":null,"code":"import { ActionTypes } from \"../../constant/ActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// reducers/productReducer.js\nconst initialState = {\n  products: [{\n    name: \"Product1\",\n    description: \"This is a product\",\n    vendors: [{\n      nameV: \"Vendor1\",\n      is_main: true,\n      variants: [{\n        xs: 20\n      }, {\n        sm: 20\n      }, {\n        l: 30\n      }, {\n        xl: 35\n      }]\n    }]\n  }, {\n    name: \"Product2\",\n    description: \"This is a product\",\n    vendors: [{\n      nameV: \"Vendor2\",\n      is_main: true,\n      variants: [{\n        xs: 20\n      }]\n    }, {\n      nameV: \"Vendor3\",\n      is_main: false,\n      variants: [{\n        l: 30\n      }, {\n        xl: 35\n      }]\n    }]\n  }]\n};\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_PRODUCTS:\n      const newProducts = {\n        ...state,\n        id: uuidv4() // Generate a new UUID for the product\n      };\n\n      return {\n        ...newProducts,\n        products: [...newProducts, action.payload]\n      };\n    case ActionTypes.ADD_PRODUCT:\n      const newProduct = {\n        ...action.payload,\n        id: uuidv4() // Generate a new UUID for the product\n      };\n\n      return {\n        ...state,\n        products: [...state.products, newProduct]\n      };\n    case ActionTypes.REMOVE_PRODUCT:\n      return {\n        ...state,\n        products: state.products.filter(product => product.id !== action.payload)\n      };\n    case ActionTypes.EDIT_PRODUCT:\n      return {\n        ...state,\n        products: state.products.map(product => product.id === action.payload.id ? action.payload : product)\n      };\n    default:\n      return state;\n  }\n};\nexport default productReducer;","map":{"version":3,"names":["ActionTypes","v4","uuidv4","initialState","products","name","description","vendors","nameV","is_main","variants","xs","sm","l","xl","productReducer","state","action","type","SET_PRODUCTS","newProducts","id","payload","ADD_PRODUCT","newProduct","REMOVE_PRODUCT","filter","product","EDIT_PRODUCT","map"],"sources":["/home/zt62/Desktop/react_practice_task/project-one/src/redux/reducer/ProductReducer.js"],"sourcesContent":["import { ActionTypes } from \"../../constant/ActionTypes\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// reducers/productReducer.js\nconst initialState = {\n  products: [\n    {\n      name: \"Product1\",\n      description: \"This is a product\",\n      vendors: [\n        {\n          nameV: \"Vendor1\",\n          is_main: true,\n          variants: [{ xs: 20 }, { sm: 20 }, { l: 30 }, { xl: 35 }],\n        },\n      ],\n    },\n    {\n      name: \"Product2\",\n      description: \"This is a product\",\n      vendors: [\n        {\n          nameV: \"Vendor2\",\n          is_main: true,\n          variants: [{ xs: 20 }],\n        },\n        {\n          nameV: \"Vendor3\",\n          is_main: false,\n          variants: [{ l: 30 }, { xl: 35 }],\n        },\n      ],\n    },\n  ],\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_PRODUCTS:\n      const newProducts = {\n        ...state,\n        id: uuidv4(), // Generate a new UUID for the product\n      };\n\n      return {\n        ...newProducts,\n        products: [...newProducts, action.payload],\n      };\n\n    case ActionTypes.ADD_PRODUCT:\n      const newProduct = {\n        ...action.payload,\n        id: uuidv4(), // Generate a new UUID for the product\n      };\n\n      return {\n        ...state,\n        products: [...state.products, newProduct],\n      };\n\n    case ActionTypes.REMOVE_PRODUCT:\n      return {\n        ...state,\n        products: state.products.filter(\n          (product) => product.id !== action.payload\n        ),\n      };\n\n    case ActionTypes.EDIT_PRODUCT:\n      return {\n        ...state,\n        products: state.products.map((product) =>\n          product.id === action.payload.id ? action.payload : product\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default productReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,4BAA4B;AACxD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;;AAEnC;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CACR;IACEC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,mBAAmB;IAChCC,OAAO,EAAE,CACP;MACEC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAG,CAAC,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAC,EAAE;QAAEC,CAAC,EAAE;MAAG,CAAC,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAC;IAC1D,CAAC;EAEL,CAAC,EACD;IACET,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,mBAAmB;IAChCC,OAAO,EAAE,CACP;MACEC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAG,CAAC;IACvB,CAAC,EACD;MACEH,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,CAAC;QAAEG,CAAC,EAAE;MAAG,CAAC,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAC;IAClC,CAAC;EAEL,CAAC;AAEL,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGb,YAAY,EAAEc,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKlB,WAAW,CAACmB,YAAY;MAC3B,MAAMC,WAAW,GAAG;QAClB,GAAGJ,KAAK;QACRK,EAAE,EAAEnB,MAAM,CAAC,CAAC,CAAE;MAChB,CAAC;;MAED,OAAO;QACL,GAAGkB,WAAW;QACdhB,QAAQ,EAAE,CAAC,GAAGgB,WAAW,EAAEH,MAAM,CAACK,OAAO;MAC3C,CAAC;IAEH,KAAKtB,WAAW,CAACuB,WAAW;MAC1B,MAAMC,UAAU,GAAG;QACjB,GAAGP,MAAM,CAACK,OAAO;QACjBD,EAAE,EAAEnB,MAAM,CAAC,CAAC,CAAE;MAChB,CAAC;;MAED,OAAO;QACL,GAAGc,KAAK;QACRZ,QAAQ,EAAE,CAAC,GAAGY,KAAK,CAACZ,QAAQ,EAAEoB,UAAU;MAC1C,CAAC;IAEH,KAAKxB,WAAW,CAACyB,cAAc;MAC7B,OAAO;QACL,GAAGT,KAAK;QACRZ,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACsB,MAAM,CAC5BC,OAAO,IAAKA,OAAO,CAACN,EAAE,KAAKJ,MAAM,CAACK,OACrC;MACF,CAAC;IAEH,KAAKtB,WAAW,CAAC4B,YAAY;MAC3B,OAAO;QACL,GAAGZ,KAAK;QACRZ,QAAQ,EAAEY,KAAK,CAACZ,QAAQ,CAACyB,GAAG,CAAEF,OAAO,IACnCA,OAAO,CAACN,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,GAAGJ,MAAM,CAACK,OAAO,GAAGK,OACtD;MACF,CAAC;IAEH;MACE,OAAOX,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}