{"ast":null,"code":"var _jsxFileName = \"/home/zt62/Desktop/react_practice_task/project-one/src/product/productlist/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { editProduct, removeProduct } from \"../../redux/action/ProductAction\";\nimport { Button, Card, Grid } from \"@mui/material\";\nimport \"./ProductCard.css\";\nimport Vendor from \"./Vendor\";\nimport DeleteProduct from \"../model/DeleteProduct\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const products = useSelector(state => state.products.products);\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\n  const handleDeleteProduct = id => {\n    // Handle the delete product logic here.\n    // You can make an API call or update the state accordingly.\n    // After successful deletion, close the modal.\n    console.log(\"deletedProductId\", id);\n    dispatch(removeProduct(id));\n    setDeleteModalOpen(false);\n  };\n  const Navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleEdit = productId => {\n    dispatch(editProduct(productId));\n    Navigate(`/edit/${productId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product_list\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: products && products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"desc\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Vendor, {\n            product: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group_button\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handleEdit(product.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: () => setDeleteModalOpen(true)\n              //onClick={() => handleDelete(product.id)}\n              ,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(DeleteProduct, {\n              isOpen: isDeleteModalOpen,\n              onDelete: () => handleDeleteProduct(product.id),\n              onClose: () => setDeleteModalOpen(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product_card no_data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Product Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => Navigate(\"/create\"),\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"YjdKwyG5ORa2K1+sX4z8DscAp4I=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","editProduct","removeProduct","Button","Card","Grid","Vendor","DeleteProduct","jsxDEV","_jsxDEV","ProductList","_s","products","state","isDeleteModalOpen","setDeleteModalOpen","handleDeleteProduct","id","console","log","dispatch","Navigate","handleEdit","productId","className","children","container","spacing","length","map","product","item","xs","name","fileName","_jsxFileName","lineNumber","columnNumber","description","variant","onClick","color","isOpen","onDelete","onClose","_c","$RefreshReg$"],"sources":["/home/zt62/Desktop/react_practice_task/project-one/src/product/productlist/ProductList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { editProduct, removeProduct } from \"../../redux/action/ProductAction\";\nimport { Button, Card, Grid } from \"@mui/material\";\nimport \"./ProductCard.css\";\nimport Vendor from \"./Vendor\";\nimport DeleteProduct from \"../model/DeleteProduct\";\n\nconst ProductList = () => {\n  const products = useSelector((state) => state.products.products);\n  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);\n\n  const handleDeleteProduct = (id) => {\n    // Handle the delete product logic here.\n    // You can make an API call or update the state accordingly.\n    // After successful deletion, close the modal.\n    console.log(\"deletedProductId\", id);\n    dispatch(removeProduct(id));\n    setDeleteModalOpen(false);\n  };\n\n  const Navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleEdit = (productId) => {\n    dispatch(editProduct(productId));\n\n    Navigate(`/edit/${productId}`);\n  };\n\n  return (\n    <div className=\"product_list\">\n      <Grid container spacing={2}>\n        {products && products.length > 0 ? (\n          products.map((product) => (\n            <Grid item xs={12} key={product.id}>\n              <Card className=\"product_card\">\n                <h2>{product.name}</h2>\n                <h3 className=\"desc\">{product.description}</h3>\n\n                <Vendor product={product} />\n\n                <div className=\"group_button\">\n                  <Button\n                    variant=\"contained\"\n                    onClick={() => handleEdit(product.id)}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"error\"\n                    onClick={() => setDeleteModalOpen(true)}\n                    //onClick={() => handleDelete(product.id)}\n                  >\n                    Delete\n                  </Button>\n                  <DeleteProduct\n                    isOpen={isDeleteModalOpen}\n                    onDelete={() => handleDeleteProduct(product.id)}\n                    onClose={() => setDeleteModalOpen(false)}\n                  />\n                </div>\n              </Card>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Card className=\"product_card no_data\">\n              <h3>No Product Found</h3>\n              <Button variant=\"contained\" onClick={() => Navigate(\"/create\")}>\n                Add Product\n              </Button>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}